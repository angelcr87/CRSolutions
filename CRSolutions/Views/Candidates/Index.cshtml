@model IEnumerable<CRSolutions.Models.Candidate>
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Index";
    CRSolutions.Models.User usuario = null;
    

    if (Context.Session.GetString("User") != null)
    {
        usuario = JsonConvert.DeserializeObject<CRSolutions.Models.User>(Context.Session.GetString("User"));
        // var UserName = User.UserName;
        // var IdRol = User.IdRol;

    }
}


<div class=".container-lg barHeaderblue">
    <div class="row">
        <!-- <div class="col-md-12">
            <div class="barHeaderblue">
                <div>
                    <img src="images/logofondo.png" class="logo-img" alt="logo" >
                </div>  
                <div class="botones-menu">     
                    <div class="boton-div">Regresar</div>
                    <div class="boton-div">Salir</div>

                </div>                 
            </div>
        </div> -->
        
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-2" style="text-align:-webkit-center">
                        <img src="~/images/logo.png" class="logo-img" alt="logo" >
                    </div>
                    <div class="col-md-4 alinea-botones">
                        <div class="container-1">
                        @* <input type="search" id="search" class="" aria-controls="candidates" onkeyup="doSearch()" placeholder="Buscar..." /> *@
                        <input type="search" id="search" class="" aria-controls="candidates" placeholder="Buscar..." />
                        </div>
                    </div>
                    @* <div class="col-md-2 alinea-botones"><input type="button" value="Regresar" class="boton-menu"></div> *@

                @{
                    if (usuario.IdRol == Guid.Parse("789A3411-ED70-42BD-9681-B0D9AE800583")) // Rol de Cliente Administrador
                    {
                        var user_Recent = Model.OrderByDescending(c => c.EvaluationDate).Where(c => c.CreditFile != null).FirstOrDefault().IdCantidate;

                        @* <input type="button" formaction="@Url.Action("GetFile","Candidates", new{ id = user_Recent, typeFile="application/pdf", file="CreditFile" })" value="Creditos" class="boton-menu"> *@
                        <div class="col-md-2" style="margin:auto;">
                            <a target="_blank" href="@Url.Action("GetFile","Candidates", new{ id = user_Recent, typeFile="application/pdf", file="CreditFile" })">
                                <div class="alinea-botones btn-credito">
                                Creditos                            
                                </div>
                            </a>
                        </div>
                    }
                }            


                    @* <div class="col-md-2 alinea-botones"><input type="button" value="Salir" class="boton-menu"></div> *@
                <div class="col-md-4 user-session">
                    <span>@usuario.FullName</span><br /> 
                    <a href="@Url.Action("Logout","Users")"><span> Cerrar Sesion</span></a>
                </div>
                    

                    

                    
                    <!-- <div class="botones-menu"> -->
                        
                       
                        
                </div>
            </div>
    </div>
            <!-- <div class="col-md-6 col-sm-10 col-xm-12  botones-menu">
                <input type="button" value="Regresar" class="boton-menu">
                <input type="button" value="Salir" class="boton-menu">
            </div> -->
        
</div>

<div class="separador"></div>

<div class="encabezado">Clientes</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive text-nowrap">
                <table class="table table-hover display" id="candidates" style="width:100%">
                <thead>
                  <tr>
                            <th scope="col">  @Html.DisplayNameFor(model => model.FullName) </th>
                            <th scope="col"> @Html.DisplayNameFor(model => model.EvaluatedPosition) </th>
                    <th scope="col">@Html.DisplayNameFor(model => model.IdUser)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.IdTypeTest)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.EvaluationDate)</th>
                    <th scope="col">Antigüedad</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.IdRiskScore)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.ReportFile)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.AudioFile)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.CreditFile)</th>
                  </tr>
                </thead>
                <tbody>
                @foreach (var item in Model) {

                  <tr>
                    <td scope="row">
                                    @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                                    @Html.DisplayFor( modelItem => item.EvaluatedPosition)
                    </td>
                    <td>
                                    @Html.DisplayFor(modelItem => item.User.FullName)
                    </td>
                    <td>
                                    @{
                                        switch(item.IdTypeTest)
                                        {
                                            case 1:
                                                    <span>Preempleo</span>                                                
                                                break;
                                            case 2:
                                                    <span>Periodico</span>
                                                break;
                                            case 3:
                                                    <span>Patrimonial</span>
                                                break;
                                            case 4:
                                                    <span>Investigacion</span>
                                                break;
                                        }
                                    }
                                    
                    </td>
                    <td>
                                    @String.Format("{0:d}", item.EvaluationDate)
                    </td>
                    <td>
                                    @Html.DisplayFor(modelItem => item.antiquity)
                    </td>
                   
                                @{
                                    switch(item.IdRiskScore)
                                    {
                                        case 1:
                                                <td style="color: green;"><i class="fa-solid fa-circle"></i></td>
                                            break;
                                        case 2:
                                                <td style="color: yellow;"><i class="fa-solid fa-circle"></i></td>
                                            break;
                                        case 3:
                                                <td style="color: red;"><i class="fa-solid fa-circle"></i></td>
                                            break;
                                    }
                                }
                    

                    <td>
                                    @if (item.ReportFile != null)
                                    {
                                        <a target="_blank" href="@Url.Action("GetFile","Candidates", new{ id = item.IdCantidate, typeFile="application/pdf", file="ReportFile" })"> 
                                            <i class="fa-solid fa-registered"></i>
                                        </a>
                                    }
                     </td>
                    <td>
                                    @if (item.AudioFile != null)
                                    {
                                        <a target="_blank" href="@Url.Action("GetFile","Candidates", new{ id = item.IdCantidate, typeFile="audio/mpeg", file="AudioFile" })">
                                            <i class="fa-solid fa-bullhorn"></i>
                                        </a>
                                    }
                    </td>
                    <td>
                                    @if (item.CreditFile != null)
                                    {
                                        <a target="_blank" href="@Url.Action("GetFile","Candidates", new{ id = item.IdCantidate, typeFile="application/pdf", file="CreditFile" })">
                                            <i class="fa-regular fa-credit-card"></i>
                                        </a>
                                    }
                    </td>
                  </tr>
                  }
                        <tr class='noSearch hide'>
                            <td ></td>
                            <td ></td>
                            <td ></td>
                            <td ></td>
                            <td ></td>
                            <td ></td>
                            <td></td>
                            <td ></td>
                            <td></td>
                            <td></td>
                        </tr>
                </tbody>
                <tfoot>
                        <tr>
                            <th scope="col">  @Html.DisplayNameFor(model => model.FullName) </th>
                            <th scope="col"> @Html.DisplayNameFor(model => model.EvaluatedPosition) </th>
                            <th scope="col">@Html.DisplayNameFor(model => model.IdUser)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.IdTypeTest)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.EvaluationDate)</th>
                            <th scope="col">Antigüedad</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.IdRiskScore)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.ReportFile)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.AudioFile)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.CreditFile)</th>
                        </tr>
                </tfoot>
              </table>
            </div>
        </div>
    </div>
</div>


}









@* 
<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EvaluatedPosition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdRiskScore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EvaluationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReportFile)
            </th>
             <th>
                @Html.DisplayNameFor(model => model.AudioFile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreditFile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdTypeTest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RecordEvaluation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BlackList)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EvaluatedPosition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdRiskScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EvaluationDate)
            </td>
            <td>
                    @if (item.ReportFile != null)
                    {
                        <a target="_blank" href="@Url.Action("GetFile","Candidates", new{ id = item.IdCantidate, typeFile="application/pdf", file="ReportFile" })">Reporte</a>                        
                    }               
             
            </td>
            <td>
              
               @if(item.AudioFile != null)
                {
                   <a target="_blank" href="@Url.Action("GetFile","Candidates", new{ id = item.IdCantidate, typeFile="audio/mpeg", file="AudioFile" })">Audio</a>
                }
                   
            </td>
            <td>
                    @if (item.CreditFile != null)
                    {
                        <a target="_blank" href="@Url.Action("GetFile","Candidates", new{ id = item.IdCantidate, typeFile="application/pdf", file="CreditFile" })">Credito</a>
                    }                    
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdTypeTest)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RecordEvaluation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BlackList)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Company.CompanyName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.IdCantidate">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.IdCantidate">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.IdCantidate">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@


<script>

    // function busqueda() {
    //     const searchText = document.getElementById('search').value.toLowerCase();

    //     document.get

    // }


    function doSearch() {

        const tableReg = document.getElementById('candidates');

        const searchText = document.getElementById('search').value.toLowerCase();

        let total = 0;



        // Recorremos todas las filas con contenido de la tabla

        for (let i = 1; i < tableReg.rows.length; i++) {

            // Si el td tiene la clase "noSearch" no se busca en su cntenido

            if (tableReg.rows[i].classList.contains("noSearch")) {

                continue;

            }



            let found = false;

            const cellsOfRow = tableReg.rows[i].getElementsByTagName('td');

            // Recorremos todas las celdas

            for (let j = 0; j < cellsOfRow.length && !found; j++) {

                const compareWith = cellsOfRow[j].innerHTML.toLowerCase();

                // Buscamos el texto en el contenido de la celda

                if (searchText.length == 0 || compareWith.indexOf(searchText) > -1) {

                    found = true;

                    total++;

                }

            }

            if (found) {

                tableReg.rows[i].style.display = '';

            } else {

                // si no ha encontrado ninguna coincidencia, esconde la

                // fila de la tabla

                tableReg.rows[i].style.display = 'none';

            }

        }



        // mostramos las coincidencias

        const lastTR = tableReg.rows[tableReg.rows.length - 1];

        const td = lastTR.querySelector("td");

        lastTR.classList.remove("hide", "red");

        if (searchText == "") {

            lastTR.classList.add("hide");

        } else if (total) {

            td.innerHTML = "Se ha encontrado " + total + " coincidencia" + ((total > 1) ? "s" : "");

        } else {

            lastTR.classList.add("red");

            td.innerHTML = "No se han encontrado coincidencias";

        }

    }
    // new DataTable('#candidates', {
    //     pagingType: 'full_numbers'
    // });

     // // $(document).ready(function () {
     // //     $('#candidates').DataTable();

     // // });

    // $(document).ready(function () {
    //     /* $('#candidates').DataTable();*/
  
    //     $('search').on('keyup', function () {
    //         $('#searchTable').val($(this).val());

    //     });


    // });

 



</script>